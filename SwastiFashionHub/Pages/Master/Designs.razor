@page "/master/designs"

@layout MainLayout
@inject IJSRuntime JsRuntime

@using SwastiFashionHub.Common.Data.Response;
@using SwastiFashionHub.Shared.Core.Models;
@using System.Linq
@using System.Reflection;
@using SwastiFashionHub.Shared.Core.Services.Interface;
@using SwastiFashionHub.Components.Data;

<Breadcrumb Title="Designs" BreadcrumbPageTitle="Master"></Breadcrumb>

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-body">

                <button class="btn font-16 btn-primary btn-block btn-sm mb-2" id="btn-new-event" @onclick="ShowModelClick">
                    <i class="mdi mdi-plus-circle-outline"></i>
                    Create New Design
                </button>

                @if (ItemsData != null)
                {
                    <DataTable TItem=DesignResponse
                           Items=@ItemsData
                           AllowEdit=true
                           AllowDelete=true
                           OnEdit="OnEditItemClick"
                           OnDelete="OnDeleteItemClick">
                        <Columns>
                            <TextColumn Heading="Name"
                                    DataField=@nameof(@DesignResponse.Name) />
                            <TextColumn Heading="Note"
                                    DataField=@nameof(@DesignResponse.Note) />
                        </Columns>
                    </DataTable>
                }
            </div>
        </div>
    </div> <!-- end col -->
</div> <!-- end row -->

<!-- Add New Event MODAL -->
<div class="modal fade @(ShowModel?"show d-block":"")" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header py-3 px-4 border-bottom-0">
                <h5 class="modal-title" id="modal-title">Design</h5>
                <button type="button" class="btn-close" @onclick="CloseModelClick" aria-hidden="true"></button>
            </div>
            <div class="modal-body p-4">
                <EditForm Model="@DesignModel" OnValidSubmit="@HandleValidSubmit" class="needs-validation">
                    <DataAnnotationsValidator />
                    <div class="row">
                        <div class="col-12">
                            <div class="mb-3">
                                <label class="form-label">Design Name</label>
                                <InputText class="form-control"
                                           placeholder="Design Name"
                                           type="text"
                                           name="DesignName"
                                           required
                                           @bind-Value="DesignModel.Name">
                                </InputText>
                                <ValidationMessage For="@(() => DesignModel.Name)" />
                            </div>
                        </div>
                        <div class="col-12">
                            <div class="mb-3">
                                <label class="form-label">Note</label>
                                <InputTextArea class="form-control"
                                               placeholder="Note"
                                               rows="3"
                                               name="Note"
                                               @bind-Value="DesignModel.Note">
                                </InputTextArea>
                            </div>
                        </div>
                        <div class="col-12">
                            <div class="mb-3">
                                <label class="form-label">Design Image</label>
                                <div class="file_uploading">
                                    <InputFile OnChange="@HandleFileSelectionAsync" @onclick="OnInputFile" accept="image/*" multiple />
                                    @if (!string.IsNullOrWhiteSpace(ErrorMessage))
                                    {
                                        <div class="text-danger text-center">
                                            @ErrorMessage
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="col-12">
                            <div class="mb-3">
                                <label class="form-label">Existing Images</label>
                                <div id="existing-images">
                                    @foreach (var imageId in DesignModel.ImageIds)
                                    {
                                        <div>
                                            <a href="@GetImageLink(imageId)" target="_blank">Image @imageId</a>
                                            <button type="button" class="btn btn-danger btn-sm" @onclick="@(() => RemoveImage(imageId))">Remove</button>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row mt-2">
                        <div class="col-12 text-end">
                            <button type="button" class="btn btn-light me-1" @onclick="CloseModelClick">Close</button>
                            <button type="submit" class="btn btn-success" id="btn-save-event">Save</button>
                        </div>
                    </div>
                </EditForm>
            </div>
        </div> <!-- end modal-content-->
    </div> <!-- end modal dialog-->
</div>
<!-- end modal-->
@if (ShowModel)
{
    <div class="modal-backdrop fade show"></div>
}